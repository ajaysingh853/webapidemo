# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool: Default

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: DockerInstaller@0
  displayName: 'docker install'
  inputs:
    dockerVersion: '17.09.0-ce'
- task: Docker@2
  displayName: 'docker login'
  inputs:
    containerRegistry: 'dockerSCon'
    command: 'login'

- task: Docker@2
  displayName: 'docker build image'
  inputs:
    containerRegistry: 'dockerSCon'
    repository: 'deepika210/webapidemo'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'dockerSCon'
    repository: 'deepika210/webapidemo'
    command: 'push'

- task: PublishBuildArtifacts@1
  displayName: 'publish artifact : drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'aksServiceCon'
    command: 'login'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'aksServiceCon'
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: true
    configurationType: 'inline'
    inline: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: webapidemo-deployment
        labels:
          app: webapidemo
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: webapidemo
        template:
          metadata:
            labels:
              app: webapidemo
          spec:
            containers:
            - name: webapidemo-container
              image: deepika210/webapidemo:latest
              ports:
              - containerPort: 80
